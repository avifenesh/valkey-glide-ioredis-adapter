name: CI

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, develop ]

# Cancel previous runs on the same PR/branch
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  test-linux:
    name: Test on Linux with Valkey Bundle (${{ matrix.arch }}, Node ${{ matrix.node }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - arch: x64
            node: '20'
          - arch: x64
            node: '22'
          - arch: arm64
            node: '20'

    services:
      valkey-bundle:
        image: valkey/valkey-bundle:8.1-bookworm
        ports:
          - 6379:6379
        options: >-
          --health-cmd "valkey-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup Node.js ${{ matrix.node }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npm run build

    - name: Wait for Valkey Bundle and verify modules
      run: |
        echo "Waiting for Valkey Bundle with modules..."
        # Install redis-cli for testing compatibility (valkey-cli has same protocol)
        sudo apt-get update && sudo apt-get install -y redis-tools
        
        for i in {1..30}; do
          if redis-cli -h localhost -p 6379 ping > /dev/null 2>&1; then
            echo "‚úÖ Valkey Bundle is ready!"
            echo "üì¶ Checking loaded modules..."
            redis-cli -h localhost -p 6379 MODULE LIST | grep -E "(json|search)" || echo "‚ö†Ô∏è  Modules not loaded or command not available"
            echo "üîç Testing JSON command..."
            redis-cli -h localhost -p 6379 JSON.SET test_ci_key '$' '"test"' || echo "‚ö†Ô∏è  JSON module not available"
            echo "üîç Testing Search command..."
            redis-cli -h localhost -p 6379 FT.CREATE test_ci_idx ON JSON PREFIX 1 "test:" SCHEMA name TEXT || echo "‚ö†Ô∏è  Search module not available"
            break
          fi
          echo "‚è≥ Waiting for Valkey Bundle... ($i/30)"
          sleep 2
        done

    - name: Run all tests (including JSON/Search modules and cluster tests)
      run: npm test
      env:
        CI: true
        VALKEY_HOST: localhost
        VALKEY_PORT: 6379
        VALKEY_BUNDLE_HOST: localhost
        VALKEY_BUNDLE_PORT: 6379
        VALKEY_CLUSTER_NODES: localhost:17000,localhost:17001,localhost:17002

    - name: Upload coverage to Codecov
      if: matrix.node == '20'
      uses: codecov/codecov-action@v5
      with:
        files: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella

  test-macos:
    name: Test on macOS with Valkey (core functionality, no modules)
    runs-on: macos-latest
    strategy:
      matrix:
        node: ['20', '22']

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup Node.js ${{ matrix.node }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npm run build

    - name: Install and start Valkey server
      run: |
        echo "üîë Installing Valkey server via Homebrew..."
        
        # Install Valkey directly (available in main Homebrew formulae)
        brew install valkey
        
        # Start Valkey server with custom config suitable for testing
        valkey-server --daemonize yes \
          --port 6379 \
          --bind 127.0.0.1 \
          --save "" \
          --appendonly no \
          --maxmemory 256mb \
          --maxmemory-policy allkeys-lru \
          --loglevel notice

    - name: Wait for Valkey server
      run: |
        echo "‚è≥ Waiting for Valkey server to be ready..."
        
        for i in {1..20}; do
          if valkey-cli -p 6379 ping > /dev/null 2>&1; then
            echo "‚úÖ Valkey server is ready!"
            echo "üìã Server info:"
            valkey-cli -p 6379 INFO server | head -5
            break
          fi
          echo "‚è≥ Still waiting for Valkey server... ($i/20)"
          sleep 2
        done
        
        # Final test
        valkey-cli -p 6379 ping

    - name: Run all tests (same as local testing)
      run: npm test
      env:
        CI: true
        VALKEY_HOST: localhost
        VALKEY_PORT: 6379

    - name: Cleanup Valkey server
      if: always()
      run: |
        echo "üßπ Cleaning up Valkey server..."
        # Stop Valkey gracefully with timeout
        timeout 10 valkey-cli -p 6379 SHUTDOWN NOSAVE || true
        # Kill any remaining processes
        pkill valkey-server || true
        # Wait a moment for cleanup
        sleep 2
        echo "‚úÖ Valkey cleanup completed"

  # Note: Full module testing happens on Linux, coverage upload is handled there

  lint:
    name: Lint and Type Check
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run ESLint
      run: npm run lint

    - name: Run TypeScript check
      run: npm run build

