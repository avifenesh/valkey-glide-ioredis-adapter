name: Release

on:
  push:
    tags:
      - 'v*.*.*'
      - 'v*.*.*-*'

permissions:
  contents: read # for checkout

jobs:
  test:
    name: Test and Build
    runs-on: ubuntu-latest
    
    services:
      redis:
        image: valkey/valkey:7.2
        ports:
          - 6379:6379
        options: >-
          --health-cmd "valkey-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Run type checking
        run: npm run build

      - name: Run tests with coverage
        run: npm test -- --coverage --coverageThreshold='{}' --testPathIgnorePatterns="/tests/unit/json-commands.test.ts|/tests/unit/search-commands.test.ts"
        env:
          SKIP_MODULE_TESTS: true

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          fail_ci_if_error: false

  release:
    name: Release
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build package
        run: npm run build

      - name: Get tag version
        id: tag_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        
      - name: Update package.json version
        run: |
          jq --arg version "${{ steps.tag_version.outputs.VERSION }}" '.version = $version' package.json > package.json.tmp
          mv package.json.tmp package.json
        
      - name: Publish to NPM
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          if [[ "${{ steps.tag_version.outputs.VERSION }}" == *"-"* ]]; then
            npm publish --tag prerelease --ignore-scripts
          else
            npm publish --ignore-scripts
          fi
        
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG_NAME="v${{ steps.tag_version.outputs.VERSION }}"
          if [[ "${{ steps.tag_version.outputs.VERSION }}" == *"-"* ]]; then
            gh release create "$TAG_NAME" --title "$TAG_NAME" --notes "Pre-release $TAG_NAME" --prerelease --target "$GITHUB_SHA"
          else
            gh release create "$TAG_NAME" --title "$TAG_NAME" --notes "Release $TAG_NAME" --target "$GITHUB_SHA"
          fi
